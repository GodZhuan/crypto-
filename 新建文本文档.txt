#include<iostream>
#include<fstream>
#include<bitset>
#include<time.h>
#include<string>
#define MAX 65534
 #define _AFXDLL
using namespace std;

char T[256];    //向量T
int Key[256];   //随机生成的密钥
int S[256];
const char *WordList = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";


int* init_Key(){
    int index;
    srand(time(NULL));  
    int keylen = int(double(rand())/double(RAND_MAX)*256);   
    for(int i = 0; i < keylen; i++){
        index = int(double(rand())/double(RAND_MAX)*63); 
        Key[i] = WordList[index];
    }
    for(int i = 0; i < 256; i++){ 
		S[i] = i;
        T[i] = Key[i%keylen];
    }
	return Key;
}

void  permute_S()
{
    int temp;
    int j = 0;
    for(int i = 0; i < 256; i++){
        j = (j + S[i] + T[i]) % 256;
        temp = S[i];
        S[i] = S[j];
        S[j] = temp;
    }
}

string create_key_stream(string text,string KeyStream)
{
    // 生成密钥流
    int i,j;
    int temp, t;
    i = j = 0;
	int textLength=text.length();
    while(textLength --){   //生成密钥流
        i = (i+1)%256;
        j = (j + S[i]) % 256;
        temp = S[i];
        S[i] = S[j];
        S[j] = temp;
        t = (S[i] + S[j]) % 256;
		KeyStream.push_back(S[t]);
    }
	return KeyStream;
}


 void Rc4EncryptText(string text,string KeyStream,string PlainText,string CryptoText,string strPath)
{    
    cout<<init_Key()<<endl;
    permute_S();
    KeyStream=create_key_stream(text, KeyStream);
    cout<<"============开始加密============:\n 密文："<<endl;;
	ofstream out;
	out.open(strPath+"textcipher.txt",ios::trunc);
	for(unsigned int i = 0; i < KeyStream.length(); i++){
		CryptoText.push_back(char(KeyStream[i] ^ text[i])); //加密
		out<<CryptoText[i];
    }	
	out.close();
    cout<<"\n============加密完成============\n============开始解密============\n明文："<<endl;
	out.open(strPath+"textcipherencipher.txt",ios::trunc);
	for(unsigned int i = 0; i < KeyStream.length(); i++){
		PlainText.push_back(char(KeyStream[i] ^ CryptoText[i]));   //解密
		out<<PlainText[i];
    }
	out.close();
    cout<<"\n============解密完成============\n"<<endl;
    printf("\n");
    
}



int main()
{   

	string KeyStream; //密钥
	string PlainText;
	string CryptoText;
	string text;
	string strPath="D:\\密码学\\crypto\\";
	ifstream in;
	char ch;
	in.open(strPath+"text.txt",ios::in);
	while(!in.eof())
	{
		in.get(ch); 
		text.push_back(ch);
	}
	in.close();
	Rc4EncryptText(text,KeyStream,PlainText,CryptoText,strPath);
    return 0;
}